// Save this file as: src/main/java/com/pahanaedu/billingsystem/model/Customer.java
package com.pahanaedu.billingsystem.model; // This is your folder structure

import org.springframework.data.annotation.Id; // This helps Spring understand the ID
import org.springframework.data.mongodb.core.mapping.Document; // This tells Spring it's a MongoDB document

@Document(collection = "customers") // This means your customer forms will go into a "customers" folder in the cabinet
public class Customer {

    @Id // This marks 'id' as the unique identifier for each customer form
    private String id; // This will be automatically generated by MongoDB

    private String name; // Customer's full name
    private String address; // Customer's address
    private String telephoneNumber; // Customer's phone number
    private int unitsConsumed; // How many units they consumed
    private String mobileNumber; // Customer's mobile number (for login)
    private String password; // Customer's password (for login)

    // --- You need these special "constructor" and "getter/setter" parts ---

    // An empty constructor (Spring needs this)
    public Customer() {}

    // A constructor to easily create a new customer
    public Customer(String name, String address, String telephoneNumber, int unitsConsumed, String mobileNumber, String password) {
        this.name = name;
        this.address = address;
        this.telephoneNumber = telephoneNumber;
        this.unitsConsumed = unitsConsumed;
        this.mobileNumber = mobileNumber;
        this.password = password;
    }

    // Methods to get information from the form (Getters)
    public String getId() { return id; }
    public String getName() { return name; }
    public String getAddress() { return address; }
    public String getTelephoneNumber() { return telephoneNumber; }
    public int getUnitsConsumed() { return unitsConsumed; }
    public String getMobileNumber() { return mobileNumber; }
    public String getPassword() { return password; }

    // Methods to put information onto the form (Setters)
    public void setId(String id) { this.id = id; }
    public void setName(String name) { this.name = name; }
    public void setAddress(String address) { this.address = address; }
    public void setTelephoneNumber(String telephoneNumber) { this.telephoneNumber = telephoneNumber; }
    public void setUnitsConsumed(int unitsConsumed) { this.unitsConsumed = unitsConsumed; }
    public void setMobileNumber(String mobileNumber) { this.mobileNumber = mobileNumber; }
    public void setPassword(String password) { this.password = password; }

    // A helpful method to print customer details (for debugging)
    @Override
    public String toString() {
        return "Customer{" +
                "id='" + id + '\'' +
                ", name='" + name + '\'' +
                ", address='" + address + '\'' +
                ", telephoneNumber='" + telephoneNumber + '\'' +
                ", unitsConsumed=" + unitsConsumed +
                ", mobileNumber='" + mobileNumber + '\'' +
                ", password='" + password + '\'' +
                '}';
    }
}